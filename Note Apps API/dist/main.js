(()=>{var n={977:()=>{class n extends HTMLElement{_shadowRoot=null;constructor(){super(),this._shadowRoot=this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML="\n        <style>\n          header {\n            background-color: #FF204E;\n            color: #fff;\n            padding: 10px;\n            text-align: center;\n          }\n        </style>\n        <header>\n          <h1>Notes App</h1>\n        </header>\n      "}}customElements.define("app-bar",n)},415:()=>{class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML="\n      <style>\n        footer {\n          background-color: #00224D;\n          color: #fff;\n          padding: 10px;\n          text-align: center;\n        }\n        footer h3{\n          font-size: 17px;\n        }\n      </style>\n      <footer>\n        <h3>Dicoding Note Apps by: Alvin Prasetio</h3>\n      </footer>\n    "}}customElements.define("footer-bar",n)},51:()=>{class n extends HTMLElement{_shadowRoot=null;_style=null;constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML='\n        <style>\n          form {\n            margin: 20px;\n          }\n          label {\n            display: grid;\n            margin-bottom: 5px;\n          }\n          input[type="text"],\n          textarea {\n            width: 100%;\n            padding: 8px;\n            margin-bottom: 10px;\n            box-sizing: border-box;\n          }\n          input[type="submit"] {\n            padding: 8px 16px;\n            background-color: #A0153E;\n            color: white;\n            border: none;\n            cursor: pointer;\n          }\n        </style>\n        <form id="noteForm">\n          <label for="title">Masukan Catatan</label>\n          <input type="text" id="title" required>\n          <label for="body">Isi Catatan</label>\n          <textarea id="body" required></textarea>\n          <input type="submit" value="Add Note">\n        </form>\n      '}connectedCallback(){this.shadowRoot.getElementById("noteForm").addEventListener("submit",this.addNote.bind(this))}addNote(n){n.preventDefault();const t=this.shadowRoot.getElementById("title"),e=this.shadowRoot.getElementById("body"),o=t.value.trim(),s=e.value.trim();""!==o&&""!==s?(this.dispatchEvent(new CustomEvent("noteAdded",{detail:{title:o,body:s}})),t.value="",e.value=""):alert("Mohon untuk mengisi semua kolom")}}customElements.define("note-form",n)},601:()=>{class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.notesData=[]}connectedCallback(){this.render()}setNotes(n){this.notesData=n,this.render()}render(){this.shadowRoot.innerHTML='\n      <style>\n        .list {\n          margin: 20px;\n        }\n        .note {\n          background-color: #5D0E41;\n          padding: 20px;\n          margin-bottom: 10px;\n          border-radius: 5px;\n          color: white;\n          position: relative;\n        }\n        .note h3 {\n          margin-top: 0;\n        }\n        .note p {\n          margin-bottom: 0;\n        }\n        .delete-button {\n          position: absolute;\n          top: 5px;\n          right: 5px;\n          background-color: #A0153E;\n          color: white;\n          border: none;\n          padding: 5px;\n          border-radius: 3px;\n          cursor: pointer;\n        }\n        #notesContainer {\n          display: grid;\n          grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n          gap: 20px;\n        }\n      </style>\n      <div class="list">\n        <h2>Notes List</h2>\n        <div id="notesContainer"></div>\n      </div>\n    ';const n=this.shadowRoot.getElementById("notesContainer");this.notesData.forEach((t=>{const e=document.createElement("div");e.classList.add("note"),e.innerHTML=`\n        <h3>${t.title}</h3>\n        <p>${t.body}</p>\n        <button class="delete-button">Delete</button>\n      `,e.querySelector(".delete-button").addEventListener("click",(()=>{this.dispatchEvent(new CustomEvent("deleteNote",{detail:t.id}))})),n.appendChild(e)}))}}customElements.define("note-list",n)}},t={};function e(o){var s=t[o];if(void 0!==s)return s.exports;var i=t[o]={exports:{}};return n[o](i,i.exports,e),i.exports}(()=>{"use strict";e(977),e(51),e(601),e(415)})()})();